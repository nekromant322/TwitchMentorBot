name: Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  push_compose:
    name: Push docker-compose.yaml to remote server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy docker-compose.yaml via SSH
        uses: appleboy/scp-action@master
        with:
          host: 195.133.147.161
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/github-twitch-bot"
          overwrite: true

  build_and_push_image:
    name: Push image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Build and Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: nekromant322/twitch-chat-bot-twitch-bot-app:latest
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build_and_push_image, push_compose ]
    steps:
      - name: Connect with SSH and Deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: 195.133.147.161
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo DB_USER = ${{ secrets.DB_USER }} > twitch-env.txt
            echo DB_PASSWORD = ${{ secrets.DB_PASSWORD }} >> twitch-env.txt
            echo BOT_CLIENT_ID = ${{ secrets.BOT_CLIENT_ID }} >> twitch-env.txt
            echo BOT_SECRET = ${{ secrets.BOT_SECRET }} >> twitch-env.txt
            echo MODERATION_SECRET = ${{ secrets.MODERATION_SECRET }} >> twitch-env.txt
            echo MODERATION_CLIENT_ID = ${{ secrets.MODERATION_CLIENT_ID }} >> twitch-env.txt
            echo PANEL_USER = ${{ secrets.PANEL_USER }} >> twitch-env.txt
            echo PANEL_PASSWORD = ${{ secrets.PANEL_PASSWORD }} >> twitch-env.txt
            echo API_KEY_Chat_GPT = ${{ secrets.API_KEY_Chat_GPT }} >> twitch-env.txt
            echo DONATION_ALERTS_CLIENT_ID = ${{ secrets.DONATION_ALERTS_CLIENT_ID }} >> twitch-env.txt
            echo DONATION_ALERTS_SECRET = ${{ secrets.DONATION_ALERTS_SECRET }} >> twitch-env.txt
            echo SPRING_APPLICATION_PROFILE = prod >> twitch-env.txt
            echo TWITCH_CHATBOT_LOGIN = ${{ secrets.TWITCH_CHATBOT_LOGIN }} >> twitch-env.txt
            echo TWITCH_CHATBOT_PASSWORD = ${{ secrets.TWITCH_CHATBOT_PASSWORD }} >> twitch-env.txt
            echo CHATBOT_GMAIL_LOGIN = ${{ secrets.CHATBOT_GMAIL_LOGIN }} >> twitch-env.txt
            echo CHATBOT_GMAIL_PASSWORD = ${{ secrets.CHATBOT_GMAIL_PASSWORD }} >> twitch-env.txt
            echo SONG_LIST_URL = overridetech.ru/twitch-bot/songList/panel >> twitch-env.txt
            
            sudo docker stop twitch-bot-app
            sudo docker rm twitch-bot-app
            sudo docker rmi nekromant322/twitch-chat-bot-twitch-bot-app:latest
            sudo docker compose --env-file twitch-env.txt up -d
            sudo docker ps -a
            sudo rm twitch-env.txt
    
